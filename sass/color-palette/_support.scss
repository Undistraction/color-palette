///
///  Error thrown when a color value can't be found
///
$cp-missing-color-error: "Missing Color Error";

// These items are used in test only
$cp-last-error: null;
$cp-under-test: false;
$cp-error-thrown: false;

/// By default, this function will throw a Sass error, but allows errors to be stopped during testing,
/// with the error saved to `$cp-last-error` instead so tests can check it was thrown.
///
/// @param {String} $error
///  The name of the error
///
/// @param {String} $message
///  The error message
///
/// @returns {Map}
///  A map of offsets to be rendered as CSS properties
///
@function cp-throw-error($error, $message) {
  @if $cp-under-test {
    @if not $cp-error-thrown {
      $cp-error-thrown: true !global;
      $cp-last-error: $error !global;
    }
  } @else {
    @error "#{$error} #{$message}";
  }
  @return null;
}


/// Overridable hook to handle unrecognised values. By default it will throw an error.
///
/// @param {ArgList} $value
///  An unrecognised value
///
/// @returns {null}
///
/// @throws $cp-missing-color-error
///
@function cp-parse-value-filter($value...) {
  @return cp-throw-error($cp-missing-color-error, "Palette value at path: `#{$value}` didn't exist in map `#{inspect($color-palette-map)}`");
}